#!/bin/sh

. "$SETUP_DATA_DIR/common-data"
. "$SETUP_DATA_DIR/common-functions"

# this script is only for ABF chroots
[[ $CHROOT_NAME =~ ^abf ]] || exit 0

. /etc/abf/abf.conf || exit 1

# work out btrfs mount locations from env
[[ -n "$CHROOT_BTRFS_SOURCE_SUBVOLUME" ]] && {
	BTRFS_SUB=$CHROOT_BTRFS_SOURCE_SUBVOLUME
	BTRFS_DIR=$(dirname $BTRFS_SUB)
}
[[ -n $CHROOT_BTRFS_SNAPSHOT_NAME ]] && {
	BTRFS_SNAP=$(dirname $CHROOT_BTRFS_SNAPSHOT_NAME);
	BTRFS_DIR=$(dirname $BTRFS_SNAP)
}
[[ -n $CHROOT_DIRECTORY ]] && {
	BTRFS_SUB=$CHROOT_DIRECTORY
	BTRFS_DIR=$(dirname $BTRFS_SUB)
}

#echo $BTRFS_DIR:$BTRFS_SUB:$BTRFS_SNAP

[[ -z $BTRFS_DIR || $BTRFS_DIR = '/' || ! -d $BTRFS_DIR ]] && exit 1

BTRFS_IMG=$VAR_DIR/chroots.btrfs

[[ $STAGE = 'setup-start' ]] && {
	[[ -z $BTRFS_SUB ]] && exit 1

	# setup shared tmp
	mkdir -p /tmp/abf && chown -R $AUTH_RUSER:$AUTH_RGROUP /tmp/abf
	
	# Initialize chroot image
	BASE_PKGS=(base base-devel sudo pacman yaourt xdelta3 unzip subversion git bzr ${EXTRA_PKGS[@]})

	[[ -d $BTRFS_DIR ]] || mkdir -p $BTRFS_DIR
	[[ -f $BTRFS_IMG ]] || (
		echo "${BTRFS_IMG} was not found. Creating new image..."
		dd if=/dev/zero of=$BTRFS_IMG bs=1M count=$CHROOT_IMG_SIZE
		mkfs.btrfs -L 'ABF_CHROOTS' $BTRFS_IMG
	)

	[[ -f $BTRFS_IMG ]] && [[ -d $BTRFS_DIR ]] && (
		# "Mounting BTRFS Image..."
		mount | grep -qe "$BTRFS_DIR" || {
			mount -o loop,compress=lzo $BTRFS_IMG $BTRFS_DIR || exit 1
		}
		[[ ! -d $BTRFS_SNAP && ! -z $BTRFS_SNAP ]] && (
			mkdir -p $BTRFS_SNAP
		)
		[[ -d ${BTRFS_SUB} ]] || (
			btrfs subvolume create ${BTRFS_SUB}
			chmod 0755 ${BTRFS_SUB}
			echo "Making Arch Linux chroot filesystem..."
			if [[ $CHROOT_NAME == 'abf64' ]]; then
				setarch i386 /usr/sbin/mkarchroot -f -C /etc/abf/pacman-i686.conf ${BTRFS_SUB}/ ${BASE_PKGS[@]} multilib-devel
			else
				/usr/sbin/mkarchroot -f -C /etc/abf/pacman-x86_64.conf ${BTRFS_SUB}/ ${BASE_PKGS[@]}
			fi
		)

		# copy support files
		[[ -d $BTRFS_SUB && ! -f $BTRFS_SUB/etc/sudoers.d/abf ]] && {
			install -m 0400 {/etc/schroot/abf/fs,$BTRFS_SUB}/etc/sudoers.d/abf
			install -m 0755 {/etc/schroot/abf/fs,$BTRFS_SUB}/usr/bin/customizepkg
		}
	)
	exit 0
}

[[ $STAGE = 'setup-stop' ]] && {
	# Unmounting BTRFS Image...
	for i in {1..5}; do
		mount | grep -qe "$BTRFS_DIR" || break
		umount "$BTRFS_DIR" 2>/dev/null && break
		sleep 1
	done
	mount | grep -qe "$BTRFS_DIR" && {
		fatal "Failed to unmount $BTRFS_DIR. Do it manually now."
	}
	exit 0
}
